{"version":3,"sources":["components/Navbar/Navbar.tsx","pages/HomePage.tsx","pages/PageNotFound.tsx","components/Loader/Loader.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","to","isActive","cn","HomePage","PageNotFound","Loader","findParent","people","parentName","parent","find","person","name","slug","sex","PeopleTable","selected","useParams","map","born","died","motherName","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","PeoplePage","useState","setPeople","hasError","setHasError","isLoading","setIsLoading","useEffect","fetchData","data","length","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2ef7a1d0.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => cn('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/people\"\n          className={({ isActive }) => cn('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title has-text-centered\">Home Page</h1>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title has-text-centered\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[];\n};\n\nfunction findParent(people: Person[], parentName: string | null) {\n  const parent = people.find(person => person.name === parentName);\n\n  if (parent) {\n    return (\n      <Link\n        to={`../${parent.slug}`}\n        className={cn({ 'has-text-danger': parent.sex === 'f' })}\n      >\n        {parent.name}\n      </Link>\n    );\n  }\n\n  return parentName || '-';\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug: selected } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(({\n          name,\n          sex,\n          born,\n          died,\n          motherName,\n          fatherName,\n          slug,\n        }) => (\n          <tr\n            data-cy=\"person\"\n            className={cn(\n              { 'has-background-warning': selected === slug },\n            )}\n            key={slug}\n          >\n            <td>\n              <Link\n                to={`../${slug}`}\n                className={cn({ 'has-text-danger': sex === 'f' })}\n              >\n                {name}\n              </Link>\n            </td>\n\n            <td>{sex}</td>\n            <td>{born}</td>\n            <td>{died}</td>\n            <td>{findParent(people, motherName)}</td>\n            <td>{findParent(people, fatherName)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n","import { useEffect, useState } from 'react';\n\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\n\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const data = await getPeople();\n\n        setHasError(false);\n        setPeople(data);\n      } catch (err) {\n        setHasError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n\n        {isLoading && (\n          <Loader />\n        )}\n\n        {(!people.length && !isLoading) && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {hasError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {(!isLoading && !hasError) && (\n              <PeopleTable people={people} />\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\n\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './pages/HomePage';\nimport { PageNotFound } from './pages/PageNotFound';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <Routes>\n      <Route\n        path=\"/\"\n        element={<HomePage />}\n      />\n\n      <Route path=\"people\">\n        <Route index element={<PeoplePage />} />\n        <Route path=\":slug\" element={<PeoplePage />} />\n      </Route>\n\n      <Route\n        path=\"*\"\n        element={<PageNotFound />}\n      />\n\n      <Route\n        path=\"/home\"\n        element={<Navigate to=\"/\" replace />}\n      />\n    </Routes>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}